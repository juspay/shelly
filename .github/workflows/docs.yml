name: Shelly Documentation Pipeline

on:
  push:
    branches: [main, master]
    paths:
      - 'docs/**'
      - 'memory-bank/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'CONTRIBUTING.md'
      - 'CODE_OF_CONDUCT.md'
      - 'src/**/*.js'
      - '.github/workflows/docs.yml'
      - 'mkdocs.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'docs/**'
      - 'memory-bank/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'CONTRIBUTING.md'
      - 'CODE_OF_CONDUCT.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  FORCE_COLOR: 1

jobs:
  validate-documentation:
    name: Documentation Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm install

      - name: 📋 Validate documentation structure
        run: |
          echo "🔍 Checking required documentation files..."
          
          # Core documentation files
          test -f README.md || { echo "❌ README.md missing"; exit 1; }
          test -f CHANGELOG.md || { echo "❌ CHANGELOG.md missing"; exit 1; }
          test -f CONTRIBUTING.md || { echo "❌ CONTRIBUTING.md missing"; exit 1; }
          test -f CODE_OF_CONDUCT.md || { echo "❌ CODE_OF_CONDUCT.md missing"; exit 1; }
          test -f LICENSE || { echo "❌ LICENSE missing"; exit 1; }
          
          # docs directory structure
          test -d docs || { echo "❌ docs/ directory missing"; exit 1; }
          test -f docs/API.md || { echo "❌ docs/API.md missing"; exit 1; }
          test -f docs/QUICK_START.md || { echo "❌ docs/QUICK_START.md missing"; exit 1; }
          test -f docs/GETTING_STARTED.md || echo "⚠️ docs/GETTING_STARTED.md missing (optional)"
          test -f docs/SETUP.md || echo "⚠️ docs/SETUP.md missing (optional)"
          
          # Memory Bank structure
          test -d memory-bank || { echo "❌ memory-bank/ directory missing"; exit 1; }
          test -f memory-bank/README.md || { echo "❌ memory-bank/README.md missing"; exit 1; }
          test -d memory-bank/project || { echo "❌ memory-bank/project/ missing"; exit 1; }
          test -d memory-bank/technical || { echo "❌ memory-bank/technical/ missing"; exit 1; }
          test -d memory-bank/current || { echo "❌ memory-bank/current/ missing"; exit 1; }
          
          # Memory Bank files
          test -f memory-bank/project/projectbrief.md || { echo "❌ memory-bank/project/projectbrief.md missing"; exit 1; }
          test -f memory-bank/project/productContext.md || { echo "❌ memory-bank/project/productContext.md missing"; exit 1; }
          test -f memory-bank/technical/systemPatterns.md || { echo "❌ memory-bank/technical/systemPatterns.md missing"; exit 1; }
          test -f memory-bank/technical/techContext.md || { echo "❌ memory-bank/technical/techContext.md missing"; exit 1; }
          test -f memory-bank/current/activeContext.md || { echo "❌ memory-bank/current/activeContext.md missing"; exit 1; }
          test -f memory-bank/current/progress.md || { echo "❌ memory-bank/current/progress.md missing"; exit 1; }
          
          echo "✅ Documentation structure validation passed"

      - name: 🔍 Validate Markdown syntax
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          globs: |
            **/*.md
            !node_modules/**/*.md
            !**/node_modules/**/*.md
        continue-on-error: true

      - name: 🔗 Check internal links
        run: |
          echo "🔍 Checking internal documentation links..."
          
          # Check for broken internal links in main docs
          grep -r "\[.*\](\..*\.md)" docs/ || echo "No internal markdown links found in docs/"
          grep -r "\[.*\](\..*\.md)" *.md || echo "No internal markdown links found in root docs"
          
          # Validate critical cross-references
          grep -q "docs/" README.md && echo "✅ README links to docs/" || echo "⚠️ README doesn't link to docs/"
          grep -q "memory-bank/" README.md && echo "✅ README mentions Memory Bank" || echo "⚠️ README doesn't mention Memory Bank"
          
          echo "✅ Internal link validation completed"

      - name: 📊 Validate package.json documentation fields
        run: |
          echo "📋 Checking package.json documentation metadata..."
          
          node -e "
            const pkg = require('./package.json');
            
            // Check required documentation fields
            if (!pkg.description) throw new Error('Missing description in package.json');
            if (!pkg.keywords || pkg.keywords.length === 0) throw new Error('Missing keywords in package.json');
            if (!pkg.homepage) throw new Error('Missing homepage in package.json');
            if (!pkg.repository) throw new Error('Missing repository in package.json');
            if (!pkg.bugs) throw new Error('Missing bugs URL in package.json');
            
            // Check Shelly-specific keywords
            const shellyKeywords = ['cli', 'error-analysis', 'repository-organization', 'memory-bank', 'ai-assisted-development'];
            const hasKeywords = shellyKeywords.some(keyword => pkg.keywords.includes(keyword));
            if (!hasKeywords) throw new Error('Missing Shelly-specific keywords');
            
            console.log('✅ package.json documentation metadata validation passed');
          "

      - name: 🧠 Validate Memory Bank consistency
        run: |
          echo "🧠 Checking Memory Bank content consistency..."
          
          # Check that Memory Bank files reference current features
          grep -q "Repository Organization" memory-bank/project/projectbrief.md || echo "⚠️ Memory Bank may be outdated - missing Repository Organization"
          grep -q "Memory Bank" memory-bank/project/projectbrief.md || echo "⚠️ Memory Bank may be outdated - missing Memory Bank references"
          grep -q "Error Analysis" memory-bank/project/projectbrief.md || echo "⚠️ Memory Bank may be outdated - missing Error Analysis"
          
          # Check current status
          grep -q "publication-ready\|ready for publication" memory-bank/current/progress.md && echo "✅ Memory Bank indicates publication readiness" || echo "⚠️ Memory Bank may need progress update"
          
          echo "✅ Memory Bank consistency check completed"

  build-docs:
    name: Build Documentation Site
    runs-on: ubuntu-latest
    needs: [validate-documentation]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm install

      - name: 🐍 Setup Python for MkDocs
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 📚 Install MkDocs and dependencies
        run: |
          pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin
          
      - name: 🏗️ Build documentation site
        run: |
          echo "🏗️ Building comprehensive documentation site..."
          
          # Create docs build directory
          mkdir -p docs-build
          
          # Copy main documentation
          cp README.md docs-build/
          cp CHANGELOG.md docs-build/
          cp CONTRIBUTING.md docs-build/
          cp CODE_OF_CONDUCT.md docs-build/
          
          # Copy docs directory
          cp -r docs/* docs-build/
          
          # Copy Memory Bank (for developer reference)
          mkdir -p docs-build/memory-bank
          cp -r memory-bank/* docs-build/memory-bank/
          
          # Build with MkDocs if config exists
          if [ -f mkdocs.yml ]; then
            echo "📖 Building with MkDocs..."
            mkdocs build --site-dir docs-build/site
          else
            echo "📝 Creating simple documentation index..."
            cat > docs-build/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Shelly Documentation</title>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px; }
                  .nav { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 30px; }
                  .nav h1 { margin: 0 0 20px 0; color: #2c3e50; }
                  .nav ul { list-style: none; padding: 0; display: flex; flex-wrap: wrap; gap: 20px; }
                  .nav a { text-decoration: none; color: #3498db; font-weight: 500; }
                  .nav a:hover { color: #2980b9; }
                  .section { margin: 30px 0; }
                  .section h2 { color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 10px; }
                  .feature-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0; }
                  .feature-card { background: #f8f9fa; padding: 20px; border-radius: 8px; border-left: 4px solid #3498db; }
                  .feature-card h3 { margin-top: 0; color: #2c3e50; }
              </style>
          </head>
          <body>
              <div class="nav">
                  <h1>🚀 Shelly Documentation</h1>
                  <p>AI-Powered Development Assistant - Comprehensive documentation for error analysis, repository organization, and Memory Bank management.</p>
                  <ul>
                      <li><a href="README.md">📖 README</a></li>
                      <li><a href="QUICK_START.md">🚀 Quick Start</a></li>
                      <li><a href="API.md">📋 API Reference</a></li>
                      <li><a href="CHANGELOG.md">📝 Changelog</a></li>
                      <li><a href="CONTRIBUTING.md">🤝 Contributing</a></li>
                      <li><a href="memory-bank/">🧠 Memory Bank</a></li>
                  </ul>
              </div>
              
              <div class="section">
                  <h2>🔍 Core Features</h2>
                  <div class="feature-grid">
                      <div class="feature-card">
                          <h3>🔍 Error Analysis</h3>
                          <p>AI-powered command analysis with multi-shell support (bash, zsh, tcsh) and intelligent suggestions.</p>
                      </div>
                      <div class="feature-card">
                          <h3>🏗️ Repository Organization</h3>
                          <p>Complete project scaffolding with GitHub integration, file organization, and configuration management.</p>
                      </div>
                      <div class="feature-card">
                          <h3>🧠 Memory Bank</h3>
                          <p>AI-assisted development context management with persistent project understanding and team collaboration.</p>
                      </div>
                  </div>
              </div>
              
              <div class="section">
                  <h2>📚 Documentation Sections</h2>
                  <ul>
                      <li><strong><a href="README.md">Main Documentation</a></strong> - Complete feature overview and usage guide</li>
                      <li><strong><a href="QUICK_START.md">Quick Start Guide</a></strong> - Get up and running in minutes</li>
                      <li><strong><a href="API.md">API Reference</a></strong> - CLI commands and programmatic API</li>
                      <li><strong><a href="GETTING_STARTED.md">Getting Started</a></strong> - Detailed setup instructions</li>
                      <li><strong><a href="memory-bank/README.md">Memory Bank</a></strong> - AI context management system</li>
                  </ul>
              </div>
              
              <div class="section">
                  <h2>🚀 Quick Commands</h2>
                  <pre style="background: #2c3e50; color: #ecf0f1; padding: 20px; border-radius: 8px; overflow-x: auto;">
          # Install Shelly
          npm install -g @juspay/shelly
          
          # Error Analysis
          shelly  # Analyze last failed command
          
          # Repository Organization  
          shelly organize
          shelly status
          shelly init my-project
          
          # Memory Bank Management
          shelly memory init
          shelly memory status
          shelly memory update</pre>
              </div>
          </body>
          </html>
          EOF
          fi
          
          echo "✅ Documentation site built successfully"

      - name: 📤 Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        with:
          path: ./docs-build

  deploy-docs:
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 📊 Deployment summary
        run: |
          echo "📚 Shelly documentation deployed successfully!"
          echo "🔗 URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📖 Includes:"
          echo "   - Complete README and guides"
          echo "   - API documentation"
          echo "   - Memory Bank system documentation"
          echo "   - Quick start and setup guides"

  update-memory-bank:
    name: Update Memory Bank Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm install

      - name: 🧠 Update Memory Bank with documentation changes
        run: |
          echo "🧠 Updating Memory Bank with latest documentation state..."
          
          # Update Memory Bank to reflect current documentation state
          node src/shelly/cli.js memory update --file current/activeContext.md || true
          
          # Check if there are changes to commit
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet memory-bank/; then
            echo "📝 No Memory Bank updates needed"
          else
            echo "📝 Committing Memory Bank updates..."
            git add memory-bank/
            git commit -m "docs: update Memory Bank after documentation changes" || true
            git push origin HEAD:main || echo "Push failed or no changes to push"
          fi
        continue-on-error: true
